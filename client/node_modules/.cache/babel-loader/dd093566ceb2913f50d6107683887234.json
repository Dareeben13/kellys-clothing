{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaelkolawole/E-Commerce/kellys-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/michaelkolawole/E-Commerce/kellys-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this;\n\nimport ShopActionTypes from './shop.types';\nexport var fetchCollectionStart = function fetchCollectionStart() {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n  };\n};\nexport var fetchCollectionsStartAsync = function fetchCollectionsStartAsync() {\n  return function (dispatch) {\n    var collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(snapshot) {\n        var collectionsMap;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                collectionsMap = convertCollectionsSnapshotToMap(snapshot); // console.log(\"COLLECTIONS MAP\", collectionsMap);\n\n                updateCollections(collectionsMap);\n\n                _this.setState({\n                  loading: false\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  };\n};","map":{"version":3,"sources":["/Users/michaelkolawole/E-Commerce/kellys-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","fetchCollectionStart","type","FETCH_COLLECTIONS_START","fetchCollectionsStartAsync","dispatch","collectionRef","firestore","collection","onSnapshot","snapshot","collectionsMap","convertCollectionsSnapshotToMap","updateCollections","setState","loading"],"mappings":";;;;;AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,SAAM;AACtCC,IAAAA,IAAI,EAAEF,eAAe,CAACG;AADgB,GAAN;AAAA,CAA7B;AAIP,OAAO,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,GAAK;AAC3C,SAAO,UAAAC,QAAQ,EAAI;AACf,QAAMC,aAAa,GAAGC,SAAS,CAACC,UAAV,CAAqB,aAArB,CAAtB;AAEAF,IAAAA,aAAa,CAACG,UAAd;AAAA,0EAAyB,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,gBAAAA,cADiB,GACAC,+BAA+B,CAACF,QAAD,CAD/B,EAEvB;;AACAG,gBAAAA,iBAAiB,CAACF,cAAD,CAAjB;;AACA,gBAAA,KAAI,CAACG,QAAL,CAAc;AAAEC,kBAAAA,OAAO,EAAE;AAAX,iBAAd;;AAJuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAzB;;AAAA;AAAA;AAAA;AAAA;AAMH,GATD;AAUH,CAXM","sourcesContent":["import ShopActionTypes from './shop.types'\n\nexport const fetchCollectionStart = ()=> ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,\n})\n\nexport const fetchCollectionsStartAsync = () =>{\n    return dispatch => {\n        const collectionRef = firestore.collection(\"collections\");\n\n        collectionRef.onSnapshot(async (snapshot) => {\n          const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n          // console.log(\"COLLECTIONS MAP\", collectionsMap);\n          updateCollections(collectionsMap);\n          this.setState({ loading: false });\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}