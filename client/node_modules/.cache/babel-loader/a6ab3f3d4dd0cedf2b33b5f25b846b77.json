{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport var fetchCollectionStart = function fetchCollectionStart() {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n  };\n};\nexport var fetchCollectionsSuccess = function fetchCollectionsSuccess(collectionsMap) {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n  };\n};\nexport var fetchCollectionsFaliure = function fetchCollectionsFaliure(errorMessage) {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: error\n  };\n};\nexport var fetchCollectionsStartAsync = function fetchCollectionsStartAsync() {\n  return function (dispatch) {\n    var collectionRef = firestore.collection(\"collections\"); // once the fetching starts , we want to call fetchCollectionStart action\n\n    dispatch(fetchCollectionStart());\n    collectionRef.get().then(function (snapshot) {\n      var collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(function (error) {\n      return dispatch();\n    });\n  };\n};","map":{"version":3,"sources":["/Users/michaelkolawole/E-Commerce/kellys-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFaliure","errorMessage","FETCH_COLLECTIONS_FAILURE","error","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,SAAO;AACvCC,IAAAA,IAAI,EAAEJ,eAAe,CAACK;AADiB,GAAP;AAAA,CAA7B;AAIP,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,cAAc;AAAA,SAAK;AACtDH,IAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADgC;AAEtDC,IAAAA,OAAO,EAAEF;AAF6C,GAAL;AAAA,CAA9C;AAKP,OAAO,IAAMG,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,YAAY;AAAA,SAAK;AACpDP,IAAAA,IAAI,EAAGJ,eAAe,CAACY,yBAD6B;AAEpDH,IAAAA,OAAO,EAAGI;AAF0C,GAAL;AAAA,CAA5C;AAKP,OAAO,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,GAAM;AAC5C,SAAO,UAAAC,QAAQ,EAAI;AACf,QAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB,CADe,CAC4C;;AAC3DF,IAAAA,QAAQ,CAACZ,oBAAoB,EAArB,CAAR;AAEAa,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyB,UAAAC,QAAQ,EAAI;AACjC,UAAMb,cAAc,GAAGL,+BAA+B,CAACkB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACT,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACH,KAHD,EAGGc,KAHH,CAGU,UAAAR,KAAK;AAAA,aAAIE,QAAQ,EAAZ;AAAA,KAHf;AAIH,GARD;AASH,CAVM","sourcesContent":["import ShopActionTypes from './shop.types'\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\nexport const fetchCollectionStart = () => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,\n})\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n})\n\nexport const fetchCollectionsFaliure = errorMessage => ({\n    type : ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload : error\n})\n\nexport const fetchCollectionsStartAsync = () => {\n    return dispatch => {\n        const collectionRef = firestore.collection(\"collections\"); // once the fetching starts , we want to call fetchCollectionStart action\n        dispatch(fetchCollectionStart())\n\n        collectionRef.get().then(snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            dispatch(fetchCollectionsSuccess(collectionsMap))\n        }).catch( error => dispatch())\n    }\n}"]},"metadata":{},"sourceType":"module"}