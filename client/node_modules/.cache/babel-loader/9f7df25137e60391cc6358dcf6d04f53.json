{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaelkolawole/E-Commerce/kellys-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsAsync),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsStart),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(shopSagas);\n\nimport { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFaliure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function fetchCollectionsAsync() {\n  var collectionRef, snapShot, collectionsMap;\n  return _regeneratorRuntime.wrap(function fetchCollectionsAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          collectionRef = firestore.collection('collections');\n          _context.next = 4;\n          return collectionRef.get();\n\n        case 4:\n          snapShot = _context.sent;\n          _context.next = 7;\n          return call(convertCollectionsSnapshotToMap, snapShot);\n\n        case 7:\n          collectionsMap = _context.sent;\n          _context.next = 10;\n          return put(fetchCollectionsSuccess(collectionsMap));\n\n        case 10:\n          _context.next = 16;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 16;\n          return put(fetchCollectionsFaliure(_context.t0.message));\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 12]]);\n}\nexport function fetchCollectionsStart() {\n  return _regeneratorRuntime.wrap(function fetchCollectionsStart$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function shopSagas() {\n  return _regeneratorRuntime.wrap(function shopSagas$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([call(fetchCollectionsStart)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["/Users/michaelkolawole/E-Commerce/kellys-clothing/client/src/redux/shop/shop.sagas.js"],"names":["fetchCollectionsAsync","fetchCollectionsStart","shopSagas","takeLatest","call","put","all","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFaliure","ShopActionTypes","collectionRef","collection","get","snapShot","collectionsMap","message","FETCH_COLLECTIONS_START"],"mappings":";;oDAQiBA,qB;qDAYAC,qB;qDAKAC,S;;AAzBjB,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,SAAUX,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGOY,UAAAA,aAHP,GAGuBL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAHvB;AAAA;AAIkB,iBAAMD,aAAa,CAACE,GAAd,EAAN;;AAJlB;AAIOC,UAAAA,QAJP;AAAA;AAKwB,iBAAMX,IAAI,CAACI,+BAAD,EAAkCO,QAAlC,CAAV;;AALxB;AAKOC,UAAAA,cALP;AAAA;AAMC,iBAAMX,GAAG,CAACI,uBAAuB,CAACO,cAAD,CAAxB,CAAT;;AAND;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQC,iBAAMX,GAAG,CAACK,uBAAuB,CAAC,YAAMO,OAAP,CAAxB,CAAT;;AARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYP,OAAO,SAAUhB,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAME,UAAU,CAACQ,eAAe,CAACO,uBAAjB,EAA0ClB,qBAA1C,CAAhB;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKP,OAAO,SAAUE,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMI,GAAG,CAAC,CACNF,IAAI,CAACH,qBAAD,CADE,CAAD,CAAT;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects'\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\nimport { fetchCollectionsSuccess, fetchCollectionsFaliure } from './shop.actions'\n\nimport ShopActionTypes from './shop.types'\n\nexport function* fetchCollectionsAsync() {\n\n    try {\n        const collectionRef = firestore.collection('collections')\n        const snapShot = yield collectionRef.get()\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapShot)\n        yield put(fetchCollectionsSuccess(collectionsMap))\n    } catch (error) {\n        yield put(fetchCollectionsFaliure(error.message))\n    }\n}\n\nexport function* fetchCollectionsStart() {\n    yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n\n\nexport function* shopSagas() {\n    yield all([\n        call(fetchCollectionsStart)\n    ])\n}"]},"metadata":{},"sourceType":"module"}