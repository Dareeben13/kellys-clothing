{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michaelkolawole/E-Commerce/kellys-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/michaelkolawole/E-Commerce/kellys-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport var fetchCollectionStart = function fetchCollectionStart() {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n  };\n};\nexport var fetchCollectionsSuccess = function fetchCollectionsSuccess(collectionsMap) {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n  };\n};\nexport var fetchCollectionsStartAsync = function fetchCollectionsStartAsync() {\n  return function (dispatch) {\n    var collectionRef = firestore.collection(\"collections\"); // once the fetching starts , we want to call fetchCollectionStart action\n\n    dispatch(fetchCollectionStart());\n    collectionRef.get()( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(snapshot) {\n        var collectionsMap;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n                dispatch(fetchCollectionsSuccess(collectionsMap));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  };\n};","map":{"version":3,"sources":["/Users/michaelkolawole/E-Commerce/kellys-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","snapshot"],"mappings":";;AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,SAAO;AACvCC,IAAAA,IAAI,EAAEJ,eAAe,CAACK;AADiB,GAAP;AAAA,CAA7B;AAIP,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,cAAc;AAAA,SAAK;AACtDH,IAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADgC;AAEtDC,IAAAA,OAAO,EAAEF;AAF6C,GAAL;AAAA,CAA9C;AAKP,OAAO,IAAMG,0BAA0B,GAAG,SAA7BA,0BAA6B,GAAM;AAC5C,SAAO,UAAAC,QAAQ,EAAI;AACf,QAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB,CADe,CAC4C;;AAC3DF,IAAAA,QAAQ,CAACR,oBAAoB,EAArB,CAAR;AAEAS,IAAAA,aAAa,CAACE,GAAd;AAAA,0EAAoB,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACVR,gBAAAA,cADU,GACOL,+BAA+B,CAACa,QAAD,CADtC;AAEhBJ,gBAAAA,QAAQ,CAACL,uBAAuB,CAACC,cAAD,CAAxB,CAAR;;AAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAApB;;AAAA;AAAA;AAAA;AAAA;AAIH,GARD;AASH,CAVM","sourcesContent":["import ShopActionTypes from './shop.types'\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\nexport const fetchCollectionStart = () => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,\n})\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n})\n\nexport const fetchCollectionsStartAsync = () => {\n    return dispatch => {\n        const collectionRef = firestore.collection(\"collections\"); // once the fetching starts , we want to call fetchCollectionStart action\n        dispatch(fetchCollectionStart())\n\n        collectionRef.get()(async (snapshot) => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            dispatch(fetchCollectionsSuccess(collectionsMap))\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}