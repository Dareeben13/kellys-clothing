{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger'; // import thunk from 'redux-thunk'\n\nimport createSagaMiddleWare from 'redux-saga';\nimport { fetchCollectionsStart } from './shop/shop.sagas';\nimport rootReducer from './root-reducer';\nvar sagaMiddleware = createSagaMiddleWare();\nvar middlewears = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewears.push(logger);\n}\n\nexport var store = createStore(rootReducer, applyMiddleware.apply(void 0, middlewears));\nsagaMiddleware.run(rootSaga);\nexport var persistor = persistStore(store);\nexport default {\n  store: store,\n  persistor: persistor\n};","map":{"version":3,"sources":["/Users/michaelkolawole/E-Commerce/kellys-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleWare","fetchCollectionsStart","rootReducer","sagaMiddleware","middlewears","process","env","NODE_ENV","push","store","run","rootSaga","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,SAASC,qBAAT,QAAsC,mBAAtC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,IAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,IAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACH;;AAED,OAAO,IAAMU,KAAK,GAAGb,WAAW,CAACM,WAAD,EAAcL,eAAe,MAAf,SAAmBO,WAAnB,CAAd,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBC,QAAnB;AAEA,OAAO,IAAMC,SAAS,GAAGd,YAAY,CAACW,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAK,EAALA,KAAF;AAASG,EAAAA,SAAS,EAATA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport { persistStore } from 'redux-persist'\nimport logger from 'redux-logger'\n// import thunk from 'redux-thunk'\nimport createSagaMiddleWare from 'redux-saga'\n\nimport { fetchCollectionsStart } from './shop/shop.sagas'\n\nimport rootReducer from './root-reducer'\n\nconst sagaMiddleware = createSagaMiddleWare()\n\nconst middlewears = [sagaMiddleware]\n\nif (process.env.NODE_ENV === 'development') {\n    middlewears.push(logger)\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewears))\n\nsagaMiddleware.run(rootSaga)\n\nexport const persistor = persistStore(store)\n\nexport default { store, persistor };\n\n"]},"metadata":{},"sourceType":"module"}